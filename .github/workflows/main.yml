name: Main workflow
on:
  push:
    branches:
      - main
jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Debug environment variables
      run: |
        echo "DB_HOST value length: ${#DB_HOST}"
        echo "DB_PORT value length: ${#DB_PORT}"
        echo "DB_NAME value length: ${#DB_NAME}"
        echo "DB_USER value length: ${#DB_USER}"
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}

    - name: Apply migrations with Docker
      env:
        FLYWAY_URL: jdbc:postgresql://${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}
        FLYWAY_USER: ${{ secrets.DB_USER }}
        FLYWAY_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        echo "Connection URL: $FLYWAY_URL"
        echo "User: $FLYWAY_USER"
        docker run --rm \
          -e FLYWAY_URL \
          -e FLYWAY_USER \
          -e FLYWAY_PASSWORD \
          -v $(pwd)/migrations:/flyway/sql \
          flyway/flyway:9.8.1 \
          migrate

    ### Этот шаг оставьте без изменений
    - name: Download and setup autotests binaries
      run: |
        wget -qO- cloud-services-engineer.gitlab.yandexcloud.net/practicum-cloud-services/dbops-autotests/-/package_files/1/download > dbopstest
        chmod +x ./dbopstest
        mv ./dbopstest /usr/local/bin/dbopstest

    ### Этот шаг оставьте без изменений
    - name: Test
      run: |
        dbopstest \
          -test.v \
          -host=${{ secrets.DB_HOST }} \
          -port=${{ secrets.DB_PORT }} \
          -user=${{ secrets.DB_USER }} \
          -password=${{ secrets.DB_PASSWORD }} \
          -db=${{ secrets.DB_NAME }}