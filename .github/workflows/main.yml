name: Main workflow
on:
  push:
    branches:
      - main
jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Repair Flyway schema history
      run: |
        docker run --rm \
          -v $(pwd)/migrations:/flyway/sql \
          flyway/flyway \
          -url="jdbc:postgresql://${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}" \
          -user="${{ secrets.DB_USER }}" \
          -password="${{ secrets.DB_PASSWORD }}" \
          repair

    - name: Check table structure and Flyway history after Repair
      run: |
        DB_CONN_STRING="postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}"
        docker run --rm --network host postgres:16 psql "$DB_CONN_STRING" -c "\d product" || echo "Product table not found"
        docker run --rm --network host postgres:16 psql "$DB_CONN_STRING" -c "SELECT * FROM flyway_schema_history ORDER BY installed_rank;" || echo "Flyway history not found"

    - name: Apply migrations with Flyway
      run: |
        docker run --rm \
          -v $(pwd)/migrations:/flyway/sql \
          flyway/flyway \
          -url="jdbc:postgresql://${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}" \
          -user="${{ secrets.DB_USER }}" \
          -password="${{ secrets.DB_PASSWORD }}" \
          migrate

    - name: Check table structure and Flyway history after Migrate
      run: |
        DB_CONN_STRING="postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}"
        docker run --rm --network host postgres:16 psql "$DB_CONN_STRING" -c "\d product" || echo "Product table not found"
        docker run --rm --network host postgres:16 psql "$DB_CONN_STRING" -c "SELECT * FROM flyway_schema_history ORDER BY installed_rank;" || echo "Flyway history not found"

    - name: Download and setup autotests binaries
      run: |
        wget -qO- cloud-services-engineer.gitlab.yandexcloud.net/practicum-cloud-services/dbops-autotests/-/package_files/1/download > dbopstest
        chmod +x ./dbopstest
        mv ./dbopstest /usr/local/bin/dbopstest

    - name: Test
      run: |
        dbopstest \
          -test.v \
          -host=${{ secrets.DB_HOST }} \
          -port=${{ secrets.DB_PORT }} \
          -user=${{ secrets.DB_USER }} \
          -password=${{ secrets.DB_PASSWORD }} \
          -db=${{ secrets.DB_NAME }}